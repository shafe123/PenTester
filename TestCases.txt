Team TextFileGuys Presents:
	The Cake Is A Lie
		Test Cases

             __.......__
        ,-"``           ``"-.
        |;------.-'      _.-'\
        ||______|`  ' ' `    |
        ||------|            |
       _;|______|            |_
     (```"""""""|            |``)
     \'._       '-.........-'_.'/
      '._`""===........===""`_.'
         ``"""=========="""``

Test Case ID: 1.1
Description: Selection of a file and uploading it to a database
Module/Class/Funciton: /FileUploader/Upload

Test Activities
Step 0(Pre): Assume user is logged in, and valid
			 Populate Known file formats selection
			 Dropdown of accepted file types populated
Step 1: Select type of Tool used from dropdown
Step 2: Browse for file (File browser)
Step 3: Select file intended for upload
			File path shown outside of file browser
Step 4: Click upload button
			File passed to validation
Step 5: Entry created in database

===================================================================
			
Test Case ID: 1.1.2
Description: Validates the file
Module/Class/Funciton: FileValidation -- NMAP

Test Activities
Step 0(Pre): Assume file exists
Step 1: Get file passed from uploader
Step 2: Verify NMAP Against DTD
			User is prompted of success or failure
Step 3: Return to FileUPload


===================================================================

Test Case ID: 2.0
Description: UploadDTD
Module/Class/Description: Plugin/Upload

Test Activities
Step: 0 (pre)
	User is logged in as admin and at management panel

Step: 1
	Step Description: Enter PLugin name in "Plugin Name" Field
	Expected Results: Name entered in field

Step: 2
	Step Description: Select Plugin file from file selector
	Expected Results: File selected from file system

Step: 3
	Step Description: Sumbit Form
	Expected Results: Validate paths and name entered into plugin database

Step: 4 
	Step Description: Save PLugin file in directory
	Expected Results: File exists in server directory

===================================================================
	
Test Case ID: 2.1.1
Description: CheckNmapDTDCorrectness
Module/Class/Description: Plugin/NmapVerify

Test Activities

Step: 0 (pre)
	Step Description: NmapDTD has already been uploaded and a generalDTD exists
	Expected Results: None

Step: 1
	Step Description: Verify a type field exists
	Expected Results: Nmap is present in the first line

Step: 2
	Step Description: Verify data fields exist
	Expected Results: NmapDTD is not an empty document

Step: 3
	Step Description: Save NmapDTD
	Expected Results: NmapDTD saved to server directory

===================================================================
	
Test Case ID: 2.1.2
Description: CheckNessusDTDCorrectness
Module/Class/Description: Plugin/NessusVerify

Test Activities

Step: 0 (pre)
	Step Description: NessusDTD has already been uploaded and a generalDTD exists
	Expected Results: None

Step: 1
	Step Description: Verify a type field exists
	Expected Results: Nessus is present in the first line

Step: 2
	Step Description: Verify data fields exist
	Expected Results: NessusDTD is not an empty document

Step: 3
	Step Description: Save NessusDTD
	Expected Results: NessusDTD saved to server directory

===================================================================
	
Test Case ID: 2.1.3
Description: CheckZapDTDCorrectness
Module/Class/Description: Plugin/ZapVerify

Test Activities

Step: 0 (pre)
	Step Description: ZapDTD has already been uploaded and a generalDTD exists
	Expected Results: None

Step: 1
	Step Description: Verify a type field exists
	Expected Results: Zap is present in the first line

Step: 2
	Step Description: Verify data fields exist
	Expected Results: ZapDTD is not an empty document

Step: 3
	Step Description: Save ZapDTD
	Expected Results: ZapDTD saved to server directory

===================================================================
	
Test Case ID: 2.1.4
Description: CheckCustomDTDCorrectness
Module/Class/Description: Plugin/CustomVerify

Test Activities

Step: 0 (pre)
	Step Description: CustomDTD has already been uploaded and a generalDTD exists
	Expected Results: None

Step: 1
	Step Description: Verify a type field exists
	Expected Results: User supplied name is present in the first line

Step: 2
	Step Description: Verify data fields exist
	Expected Results: CustomDTD is not an empty document

Step: 3
	Step Description: Save CustomDTD
	Expected Results: CustomDTD saved to server directory

===================================================================
	
Test Case ID: 3.1.a
Description: Registration Form as a Manager
Module/Class/Function: /Account/Register

Test Activities
Step: 1
	Step Description: Enter Email address in form.
	Expected Results: None
	Results:
	
Step: 2
	Step Description: Enter password and password confirmation.
	Expected Results: Password confirmation is validated against the first password.
	Results:
	
Step: 3
	Step Description: Specify that user is a manger.
	Expected Results: None
	Results:
	
Step: 4
	Step Description: Select Submit.
	Expected Results: User receives Verification Email, User Account created in database.
	Results:
	
===================================================================

Test Case ID: 3.1.b
Description: Registration Form as an Employee
Module/Class/Function: /Account/Register

Test Activities
Step: 0 (pre)
	Step Description: User is on Registration page.
	Expected Results: None
	Results:

Step: 1
	Step Description: Enter Email address in form.
	Expected Results: None
	Results:
	
Step: 2
	Step Description: Enter password and password confirmation.
	Expected Results: Password confirmation is validated against the first password.
	Results:
	
Step: 3
	Step Description: Specify that user is *not* a manager.
	Expected Results: Manager Email prompt shows.
	Results:
	
Step: 4
	Step Description: Enter Manager Email address.
	Expected Results: None
	Results:
	
Step: 5
	Step Description: Select Submit.
	Expected Results: User receives Verification Email, User Account created in database, ManageeApproval is created in database.
	Results:

===================================================================	

Test Case ID: 3.2.a
Description: Verify User Account as a Manager
Module/Class/Function: /Account/ConfirmToken

Test Activities
Step: 0 (pre)
	Step Description: User creates Account (Test Case 3.1.a)
	Expected Results: User Receives Verification Email to Account Email Address
	Results:
	
Step: 1
	Step Description: Click link in email
	Expected Results: User is taken to Confirmation page, User Account is confirmed in database.
	Results:

===================================================================

Test Case ID: 3.2.b
Description: Verify User Account as an Employee
Module/Class/Function: /Account/ConfirmToken

Test Activities
Step: 0 (pre)
	Step Description: User creates Account (Test Case 3.1.b)
	Expected Results: User Receives Verification Email to Account Email Address
	Results:
	
Step: 1
	Step Description: Click link in email
	Expected Results: User is taken to Confirmation page.
					  User Account is confirmed in database.
					  Manager receives an email for Confirmation as Employee.
	Results:
	
===================================================================

//TODO
Description: Log User In

===================================================================

//TODO
Description: Manager Confirms Employee

===================================================================

Test Case ID: 4.1
Description: Change User password
Module/Class/Function: /Account/Password

Test Activities
Step: 0 (pre)
	Step Description: User logs into Account (Test Case //TODO) and is on /Account page.
	Expected Results: User has an active session.
	Results:
	
Step: 1
	Step Description: User enters Old Password into Form
	Expected Results: None
	Results:
	
Step: 2
	Step Description: User enters New Password and Password Confirmation.
	Expected Results: Password Confirmation is validated against the first Password.
	Results:

Step: 3
	Step Description: User clicks Submit.
	Expected Results: Successful password change is submitted.
					  Entry is updated in database.
	Results:

===================================================================

Test Case ID: 4.3
Description:  Change User Manager
Module/Class/function: /Account/Manager

Test Activities
Step: 0 (pre)
	Step Description: User has verified and is logged into an Employee account (Test Cases 3.2.b, //TODO)
					  User is on /Account page.
	Expected Results: None
	Results: 
	
Step: 1
	Step Description: User enters new email address into form.
	Expected Results: None
	Results: 
	
Step: 2
	Step Description: User clicks Submit.
	Expected Results: User receives confirmation message.
					  Current Manager relation is deleted from database.
					  User is dropped from Current Manager's Employee list.
					  New Manager receives an Email.
	Results: 

===================================================================

Test Case ID: 5.3
Description: Search files by tool(s) used
Module/Class/Funciton: /File/Search

Test Activities
Step 0(Pre): User is logged in, and validated
			 User on search page
Step 1: Populate types of tools used
			Dropdown of available tools populated
Step 2: Select tool to search by
Step 3: Click Search
			Returns file entries that used selected tool
	
===================================================================
===================================================================
===================================================================
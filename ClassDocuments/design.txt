1.)
	1.1)
		1.1.1)Allow input into a page
		1.1.2)Use Regex/string manipulation to convert to a data type
		1.1.3)Alert the user to success/failure using response page
	1.2)MSSQL database, easy to use with Entity Framework
	
	
		1.2.3)Chop input using regex/string manipulation
			discard extraneous information
	1.3)
		1.3.1)Entity Framework relates directly to Model classes
		
		1.3.3)Create an HTML template for the form data.

 2.)Plugin directory
     2.1)load all configuration files in directory
         2.1.1)Nessus
         2.1.2)Nmap
         2.1.3)ZAP
         2.1.4)custom
     2.2)once loaded, choose config file that matches input file type
         2.2.1)if no file type is found to match, reject file
     2.3)use config file to verify the input file is valid
         2.3.1)tags are ended properly closed

3.)MVC 4/ASP has some built-in user management
	3.1)Create web page for input
		3.1.2)If manager, give them a 'manager code'
		3.1.3)To register under a manager, use 'manager code'
			3.1.3.1)Manager must accept user as peon
	3.2)Use query parameters to pass verification code/email so user doesn't have to enter it.
		Lock account unless verification code is received.
	
4.)
	4.1)Prompt for old password, new password
	4.2)Send password reset email with link to reset
	4.3)Provide page to edit manager code
		4.3.1)If edited and then reverted, manager must reapprove
		4.3.2)If edited, new manager must approve
	4.4)Provide page with list of pending/current peons
	
5.)Textboxes with radial buttons/listboxes
	Strong use of database here
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.Mvc;
using System.Web.DataAccess;
using System.Xml;
using System.Xml.Schema;

using PenTester.Models;
using WebMatrix.WebData;

// Remove RM.

namespace PenTester.Controllers
{
    public class ReportController : Controller
    {
        private static int GintLineCount = 0;
        private static string GstrParseError = "";

        public ActionResult Index()
        {
            Entities db = new Entities();
            var query = db.Plugins.Select(c => new SelectListItem
            {
                Value = c.PluginGenerated,
                Text = c.PluginName
            });
            var model = new ReportUploadModel
            {
                List = query.ToList()
            };
            return View(model);
        }


        [AllowAnonymous]
        public ActionResult ReportIndex()
        {

            // Set the validation settings.
            XmlReaderSettings settings = new XmlReaderSettings();
            settings.DtdProcessing = DtdProcessing.Parse;
            settings.ValidationType = ValidationType.DTD;
            settings.ValidationEventHandler += new ValidationEventHandler(ValidationCallBack);

            System.IO.Stream str = new System.IO.FileStream("C:\\Users\\DSU\\Desktop\\NMapDTD.xml", System.IO.FileMode.Open, System.IO.FileAccess.Read);
            /*
             * <?xml-stylesheet href="file:///usr/local/bin/../share/nmap/nmap.xsl" type="text/xsl" ?>
            */
            // Create the XmlReader object.
            XmlReader reader = XmlReader.Create(str, settings);

            // Parse the file. 
            while (reader.Read())
            { 
                GintLineCount++;
            };
            reader.Close();
            str.Close();

            var model = new ReportParsesModel { strParseError = GstrParseError };
            
            //System.Diagnostics.Debug.WriteLine("Parse Complete");

            return View(model);
        }

        // Display any validation errors.
        public static void ValidationCallBack(object sender, ValidationEventArgs e)
        {
            //System.Diagnostics.Debug.WriteLine("Validation Error: {" + GintLineCount + "}", e.Message);
            GstrParseError += "{Line " + GintLineCount + "}" + e.Message + "<br />";
        }
        
    }
}

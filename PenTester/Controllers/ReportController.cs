using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.Mvc;
using System.Web.DataAccess;
using System.Xml;
using System.Xml.Schema;
using System.IO;
using System.Windows;
using System.Web.UI;
using PenTester.Models;
using WebMatrix.WebData;


// Remove RM.


namespace PenTester.Controllers
{
    public class ReportController : Controller
    {

        //private static int GintLineCount = 0;
        private static string GstrParseError = "";
        static string[] _words = { "Sam", "Dot", "Perls" };

        public ActionResult Index()
        {
            return View();
        }

/*
* ==============================================================================
* ActionResult(s)
* Upload a Report
*==============================================================================
*/

        //Populate dropdown list of plugins
        public ActionResult ReportUpload()
        {
            Entities db = new Entities();
            var query = db.Plugins;
            var model = new ScanUploadModel
            {
                PluginList = query.AsEnumerable<Plugin>()
            };
            return View(model);
        }


/*
 * ==============================================================================
 * ActionResult(s)
 * Create a Report
 *==============================================================================
 */

        public ActionResult ResultsWriter()
        {
            Entities db = new Entities();
            var query = db.Reports;

            var model = new ReportWriterModel
            {
                List = query.AsEnumerable<Report>()
            };
            return View(model);
        }

        [HttpPost]
        public ActionResult DownloadResult(ReportWriterModel model)
        {
            //for each( item in selected report list)
            //  
            model.strHTML = CreateHtMLPage();
            System.Diagnostics.Debug.WriteLine(model.strHTML);
            
            return View(model);
        }

/*
* ==============================================================================
* ActionResult(s)
* Delete a Report
*==============================================================================
*/

        public ActionResult DeleteReport()
        {
            Entities db = new Entities();
            var query = db.Reports;
            
            var model = new ReportDeleteModel
            {
                List = query.AsEnumerable<Report>()
            };

            return View(model);
        }

        [HttpPost]
        public ActionResult DeleteReport(ReportDeleteModel model)
        {
            Entities db = new Entities();
            var query = db.Reports;

            model = new ReportDeleteModel
            {
                List = query.AsEnumerable<Report>()
            };

            //If successful delete
            model.strDeleteMessage = "File Deleted";

            return View(model);
        }

/*
* ==============================================================================
* Function(s)
* 
*==============================================================================
*/

        public string CreateHtMLPage()
        {
            // Initialize StringWriter instance.
            StringWriter stringWriter = new StringWriter();

            // Put HtmlTextWriter in using block because it needs to call Dispose.
            using (HtmlTextWriter writer = new HtmlTextWriter(stringWriter))
            {
                writer.AddAttribute(HtmlTextWriterAttribute.Id, "wrapper");
                writer.RenderBeginTag(HtmlTextWriterTag.Div);

                writer.AddAttribute(HtmlTextWriterAttribute.Id, "fields");
                writer.RenderBeginTag(HtmlTextWriterTag.Div);
                writer.RenderEndTag();
                writer.WriteLine();
                writer.AddAttribute(HtmlTextWriterAttribute.Id, "main");
                writer.RenderBeginTag(HtmlTextWriterTag.Div);
                writer.RenderEndTag();
                writer.RenderEndTag();
            }
            // Return the result.
            return stringWriter.ToString();
        }
            
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Http;
using System.Web.Mvc;
using System.Web.Optimization;
using System.Web.Routing;
using System.IO;
using WebMatrix.WebData;

namespace PenTester
{
    // Note: For instructions on enabling IIS6 or IIS7 classic mode, 
    // visit http://go.microsoft.com/?LinkId=9394801

    public class MvcApplication : System.Web.HttpApplication
    {
        protected void Application_Start()
        {
            new Filters.InitializeSimpleMembershipAttribute();
            WebSecurity.InitializeDatabaseConnection("DefaultConnection", "UserProfiles", "UserId", "UserName", true);

            AreaRegistration.RegisterAllAreas();

            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
            RouteConfig.RegisterRoutes(RouteTable.Routes);
            BundleConfig.RegisterBundles(BundleTable.Bundles);

            Entities db = new Entities();
            if (db.UserProfiles.Count() == 0)
            {
                db.UserProfiles.Add(new UserProfile()
                {
                    UserName = "rootAccount"
                });
            }
            db.SaveChanges();
            if (db.Groups.Count() == 0)
            {
                db.UserProfiles.First().GroupsOwned.Add(new Group()
                {
                    Name = "All",
                    JoinLink = "------------------------"
                });
            }
            db.SaveChanges();
            if (db.Plugins.Count() == 0)
            {
                db.UserProfiles.First().GroupsOwned.First().Plugins.Add(new Plugin()
                {
                    PluginName = "nmap",
                    PluginGenerated = "----------------------",
                });
                db.UserProfiles.First().GroupsOwned.First().Plugins.Add(new Plugin()
                {
                    PluginName = "nessus",
                    PluginGenerated = "----------------------",
                });
                db.UserProfiles.First().GroupsOwned.First().Plugins.Add(new Plugin()
                {
                    PluginName = "zapp",
                    PluginGenerated = "----------------------",
                });
            }

            db.SaveChanges();

            //Add defaults username's here
            string[] usernames = new string[] { "test@hotmail.com" };
            foreach (string user in usernames)
            {
                if (!WebSecurity.UserExists(user))
                {
                    //default passwords are created here
                    WebSecurity.CreateUserAndAccount(user, "testing", null, false);

                    UserProfile profile = db.UserProfiles.Single(ent => ent.UserName == user);

                    Group newGroup = new Group()
                    {
                        CreatedBy = profile.UserId,
                        Name = profile.UserName,
                        JoinLink = Guid.NewGuid().ToString()
                    };

                    profile.GroupsIn.Add(newGroup);
                    db.SaveChanges();

                    newGroup.FileDirectory = Server.MapPath("/Groups/" + newGroup.GroupId);
                    System.IO.Directory.CreateDirectory(newGroup.FileDirectory);
                    System.IO.Directory.CreateDirectory(newGroup.FileDirectory + "/Reports");
                    System.IO.Directory.CreateDirectory(newGroup.FileDirectory + "/Plugins");
                    System.IO.Directory.CreateDirectory(newGroup.FileDirectory + "/Scans");

                    db.SaveChanges();
                }
            }
            
        }

        protected void Application_End()
        {
            
        }
    }
}
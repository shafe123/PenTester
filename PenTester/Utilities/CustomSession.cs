using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;
using WebMatrix.WebData;

namespace PenTester.Utilities
{
    public class AuthorizeCookieAttribute : ActionFilterAttribute
    {
        public override void OnActionExecuting(ActionExecutingContext filterContext)
        {
            if (!filterContext.ActionDescriptor.IsDefined(typeof(AllowAnonymousAttribute), true)
                || WebSecurity.IsAuthenticated)
            {
                HttpCookie auth = filterContext.HttpContext.Request.Cookies.Get("PenTester");
                if (auth != null)
                {
                    if (auth.Values["username"].ToString() == WebSecurity.CurrentUserName
                        && auth.Values["sessionID"].ToString() == filterContext.HttpContext.Session.SessionID
                        && auth.Expires >= DateTime.Now)
                    {
                        HttpCookie renew = auth;
                        renew.Expires = DateTime.Now.AddMinutes(10);
                        filterContext.HttpContext.Response.SetCookie(renew);

                        return;
                    }
                }

                //throw new SecurityException("You can not access this page");
                HttpCookie deauth = new HttpCookie("PenTester");
                auth.Expires = DateTime.Now.AddMinutes(-1);

                filterContext.HttpContext.Response.SetCookie(deauth);

                WebSecurity.Logout();
                filterContext.HttpContext.Session.Abandon();

                RouteValueDictionary redirectTargetDictionary = new RouteValueDictionary();
                redirectTargetDictionary.Add("action", "Login");
                redirectTargetDictionary.Add("controller", "Account");
                filterContext.Result = new RedirectToRouteResult(redirectTargetDictionary);
            }
        }
    }
}
using PenTester.Utilities;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Globalization;
using System.Web.Security;

namespace PenTester.Models
{
    public class LocalPasswordModel
    {
        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Current password")]
        public string OldPassword { get; set; }

        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "New password")]
        public string NewPassword { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Confirm new password")]
        [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; }
    }

    public class LoginModel
    {
        [Required]
        [Display(Name = "Email Address")]
        [CustomValidation(typeof(Utilities.UserNameValidator), "IsValid")]
        public string UserName { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }

    public class RegisterModel
    {
        [Required]
        [DataType(DataType.EmailAddress)]
        [CustomValidation(typeof(Utilities.UserNameValidator), "IsValid")]
        [Display(Name = "Email Address")]
        public string UserName { get; set; }

        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; }

        [Required]
        [Display(Name = "Manager?")]
        public bool Manager { get; set; }

        [Display(Name = "Manager Email Address")]
        public string ManagerName { get; set; }
    }

    public class TokenModel
    {
        [Required]
        [Display(Name = "User name")]
        [CustomValidation(typeof(Utilities.UserNameValidator), "IsValid")]
        public string UserName { get; set; }

        [Required]
        [Display(Name = "Verification Token")]
        public string Token { get; set; }
    }

    public class ManagerModel
    {
        [Display(Name = "Current Manager name")]
        public string OldManager { get; set; }

        [Required]
        [Display(Name = "New Manager name")]
        [CustomValidation(typeof(Utilities.UserNameValidator), "IsValid")]
        public string NewManager { get; set; }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Xml.Serialization;

namespace PenTester.Objects
{
    public class ReportItem
    {
        [XmlAttribute("port")]
        public int port { get; set; }
        [XmlAttribute("svc_name")]
        public string ServiceName { get; set; }
        [XmlAttribute("protocol")]
        public string Protocol { get; set; }
        [XmlAttribute("severity")]
        public int Severity { get; set; }
        [XmlAttribute("pluginID")]
        public int PluginID { get; set; }
        [XmlAttribute("pluginName")]
        public string PluginName { get; set; }
        [XmlAttribute("pluginFamily")]
        public string PluginFamily { get; set; }

        [XmlElement("description")]
        public string Description { get; set; }
        [XmlElement("fname")]
        public string FName { get; set; }
        [XmlElement("plugin_modification_date")]
        public string PluginModificationDate { get; set; }
        [XmlElement("plugin_publication_date")]
        public string PluginPublicationDate { get; set; }
        [XmlElement("plugin_type")]
        public string PluginType { get; set; }
        [XmlElement("risk_factor")]
        public string RiskFactor { get; set; }
        [XmlElement("solution")]
        public string Solution { get; set; }
        [XmlElement("synopsis")]
        public string Synopsis { get; set; }
        [XmlElement("plugin_output")]
        public string PluginOutput { get; set; }
    }

    public class Tag
    {
        [XmlAttribute("name")]
        public string Name { get; set; }

        [XmlText()]
        public string Value { get; set; }
    }

    public class HostProperties
    {
        [XmlElement("tag")]
        public List<Tag> tags { get; set; }

        [XmlIgnore]
        public string OperatingSystem { get { return tags.Count(t => t.Name=="operating-system") > 0 ? tags.Single(t => t.Name == "operating-system").Value : ""; } }
        [XmlIgnore]
        public string NetBiosName { get { return tags.Count(t => t.Name == "netbios-name") > 0 ? tags.Single(t => t.Name == "netbios-name").Value : ""; } }
        [XmlIgnore]
        public string MacAddress { get { return tags.Count(t => t.Name == "mac-address") > 0 ? tags.Single(t => t.Name == "mac-address").Value : ""; } }

        //<tag name="HOST_END">Thu Mar 28 11:51:33 2013</tag>
        //<tag name="system-type">general-purpose</tag>
        //<tag name="operating-system">Microsoft Windows XP
        //Microsoft Windows XP Service Pack 1</tag>
        //<tag name="mac-address">00:50:56:05:01:7d</tag>
        //<tag name="traceroute-hop-0">192.168.2.105</tag>
        //<tag name="host-ip">192.168.2.105</tag>
        //<tag name="netbios-name">WORKSTATION</tag>
        //<tag name="HOST_START">Thu Mar 28 11:50:00 2013</tag>
    }

    public class Host
    {
        [XmlAttribute("name")]
        public string Address { get; set; }

        [XmlElement("HostProperties")]
        public HostProperties Properties { get; set; }

        [XmlElement("ReportItem")]
        public List<ReportItem> Items { get; set; }
    }

    public class Report
    {
        [XmlAttribute("name")]
        public string ReportName { get; set; }

        [XmlElement("ReportHost")]
        public List<Host> Hosts { get; set; }
    }

    [Serializable]
    [XmlRoot("NessusClientData_v2")]    
    public class NessusReport
    {
        public Report Report { get; set; }
    }
}